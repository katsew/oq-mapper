START
  =
  	( CMD_CREATE _ VAL_TABLE_NAME _ "(" _ VALUES+ ")" _ META _ EOS )

CMD_CREATE
  = STMT_CREATE _ elem:(STMT_TABLE) _ cond:(
    STMT_IF _ OPERAND_EXISTS /
    STMT_IF _ COND_NOT _ OPERAND_EXISTS /
    ""
  )
  
VAL_TABLE_NAME
  = (VAL_NAME "." VAL_NAME) / (VAL_NAME)
  
VAL_NAME
  = ("`" value "`") / value
  
VALUES
  =  _ expr:VALUE
  
VALUE
  = 
  ( 
  	VAL_NAME _
	( TYPE / TYPE_WITH_LENGTH ) _
    ( COND_NOT _ NULL  / "" ) _
    ( DEFAULT_CLAUSE / "") _
    ( COMMENT_CLAUSE / "" ) _
    ( AUTO_INCREMENT / "") _
    BR
  ) / (
    ( PK  /  INDEX) BR
  ) / (
    CONSTRAINT BR
  )
  
META
  = ( "ENGINE" / "engine" ) _ "=" ENGINES _ ( AUTO_INCREMENT "=" integer / "" ) _ DEFAULT_CHARSET
  
DEFAULT_CHARSET
  = "DEFAULT CHARSET" "=" CHARSETS

CHARSETS
  = ("utf8")

ENGINES
  = ( "InnoDB" )

PK
  = ("PRIMARY KEY" / "primary key") _ "(" VAL_NAME ")"

INDEX
  = ( "KEY" / "key" ) _ VAL_NAME _ "(" VAL_NAME ")"

CONSTRAINT
  = ( "CONSTRAINT" / "constraint" ) _ VAL_NAME _ (FK)

FK
  = ( "FOREIGN KEY" / "foreign key") _ "(" VAL_NAME ")" _ ( "REFERENCES" / "references" ) _ VAL_NAME _ "(" VAL_NAME ")" _ ON_EVENT

ON_EVENT
  =  ( "ON DELETE NO ACTION ON UPDATE NO ACTION" / "" )

TYPE
  = (
    ("datetime" / "DATETIME") /
   ( "date" / "DATE") /
    NULL
  )

TYPE_WITH_LENGTH
  = (
    ("int" / "INT") _ LENGTH _ SIGN  /
    ("varchar" / "VARCHAR") _ LENGTH /
    ("tinyint" / "TINYINT") _ LENGTH _ SIGN
  )

LENGTH
  = "(" _ integer _ ")"

NULL
  = ("null" / "NULL")
  
DEFAULT_CLAUSE
  = ("default" / "DEFAULT") _ (NULL / defaults)
  
COMMENT_CLAUSE
  = ("comment" / "COMMENT") _ comments

SIGN
  = ("unsigned" / "")

AUTO_INCREMENT
  = ("AUTO_INCREMENT" / "auto increment")

STMT_CREATE
  = ("create" / "CREATE")

STMT_TABLE
  = ("table" / "TABLE")

STMT_IF
  = ("if" / "IF")

COND_NOT
  = ("not" / "NOT")

OPERAND_EXISTS
  = ("exists" / "EXISTS")

COMMA
  = ","
  
EOS
  = ";"
  
EOF
  = !.
  
EOL
  = EOF / [\n\r]+
//  = [\n\r\u2028\u2029]

BR
  = (EOL / COMMA)

src
  = .

string
	= chars:[a-zA-Z]+ { return chars.join(""); }

value
    = chars:[a-zA-Z_]+ { return chars.join(""); }
    
comments
    = "'" (!"'" src)* "'"

defaults
    = "'" chars:[a-zA-Z0-9]+ "'"

integer
  = _ [0-9]+ { return parseInt(text(), 10); }

_ "whitespace"
  = [ \t\n\r]*